# Created manually
# Time : 20 minutes
# The module will scan the Class C network given on the main() and return a list of all live hosts


import socket

import common


def scan(addr):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    socket.setdefaulttimeout(1)
    result = s.connect_ex((addr, 135))
    if result == 0:
        common.logcsv([common.HOSTNAME, common.gettime(), 'Ping', addr, 'Created', 'Completed'])
        return 1
    else:
        common.logcsv([common.HOSTNAME, common.gettime(), 'Ping', addr, 'Created', 'Failed'])
        return 0


# Class C Net Scan
def runC(network, last):
    '''
    Gets the ip address of the local machine and start broadcast - scan the local network
    :param network: Ip address of the local machine
    :last: The last octet of the ip address
    :return: list of all live hosts
    '''
    net1 = network.split('.')
    net1 = net1[0] + '.' + net1[1] + '.' + net1[2] + '.'
    common.log("Starting broadcast over local network")

    live_hosts = []

    addr = net1 + str(last)
    common.log(addr)
    if (scan(addr)):
        common.log(addr, "is running")
        live_hosts.append(addr)

    retStr = ""
    for liveip in live_hosts:
        retStr += str(liveip) + "\n"

    return live_hosts


def main():
    network = socket.gethostbyname(socket.gethostname())
    live_hosts = runC(network)
