<%@ Page Title="" Language="C#" MasterPageFile="~/documents/MasterPage.master" AutoEventWireup="true" CodeFile="Agentapi.aspx.cs" Inherits="documents_Agentapi" %>

<asp:Content ID="Content1" ContentPlaceHolderID="head" runat="Server">
    <style>
        b {
            font-size: 1rem
        }
    </style>
    <title>Agent API</title>
</asp:Content>
<asp:Content ID="Content2" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">
    <h1><i class="fa fa-chevron-right p-1 "></i>Agent API</h1>
    <hr />
		<a target="_blank" href="https://git.tlabs.bgu.ac.il/basslio/reware.git" class="btn btn-dark btn-sm text-white m-1" style="right: 0px !important;"><span data-feather="gitlab" class="mr-2"></span>Gitlab repository</a>

	
    <section>

        <b>Agent():</b>
        <ul class="fa-ul">
            <li class="m-2"><i class="fa-li fa fa-square"></i>Creates a thread that will run the flask app</li>
            <li class="m-2"><i class="fa-li fa fa-square"></i>Sets up the Agent with the relevant fields.</li>
            <li class="m-2"><i class="fa-li fa fa-square"></i>Sets up the local sqlite db and create table if needed</li>
            <li class="m-2"><i class="fa-li fa fa-square"></i>Send request to CNC to update status as alive and add to agents list</li>
            <li class="m-2"><i class="fa-li fa fa-square"></i>return: Thread, AGENT_ID, HOST_IP, HOST_PORT</li>
            <li class="m-2"><i class="fa-li fa fa-square"></i>post conditions: Agent running, CNC DB updated with the agent in his list, local db updated</li>
        </ul>
        <b>Agent API - Flask: 
        </b>
        <div class="card  bg-dark text-white m-3">
            <div class="card-body">
                <b>@app.route(‘/’): check_status():</b>
                <ul class="fa-ul">
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>An is alive function that returns a message, to be used to check if agent is alive</li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>return: json including ‘status’ True and ‘err_code’ 0</li>
                </ul>
            </div>
        </div>
        <div class="card  bg-dark text-white m-3">
            <div class="card-body">
                <b>@app.route(‘/upload’): upload_malware():</b>
                <ul class="fa-ul">
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>Upload a malware to the agent, receive malware id and files, extract files to 'temp/{malware_id}' folder</li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>checks files are correct format </li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>return: json msg with results</li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>post conditions: malware to CNC DB. local log updated</li>
                </ul>
            </div>
        </div>
        <div class="card  bg-dark text-white m-3">
            <div class="card-body">
                <b>@app.route(‘/run’): run_malware():</b>
                <ul class="fa-ul">
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>Runs malware {malware_id} on agent. Initially run pre.exe, while using a thread to read the pre CSV log. Then run malware.exe while reading the malware’s CSV file and writing the information to the local log</li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>return: json msg with results</li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>pre conditions: malware_id exists</li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>post conditions: ran pre.exe (generated by the CNC to take preventive action before running the malware)  and malware.exe, updated local log and db with information regarding malware’s actions taken from the malware csv file and the pre’s actions taken from the pre csv log</li>
                </ul>
            </div>
        </div>
        <div class="card  bg-dark text-white m-3">
            <div class="card-body">
                <b>@app.route(‘/revert): revert_malware():
                </b>
                <ul class="fa-ul">
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>Reverts the observables created by the malware {malware_id} by running post.exe (generated by the CNC to revert the malware.exe’s actions) while a thread reads the post’s csv log file
                    </li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>return: json msg with results
                    </li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>pre conditions: malware_id exists</li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>post conditions: reverted malware by running post.exe updated local log, post’s csv file read and written to local log and db.</li>
                </ul>
            </div>
        </div>
        <div class="card  bg-dark text-white m-3">
            <div class="card-body">
                <b>@app.route(‘/get_logs’): get_logs()
                </b>
                <ul class="fa-ul">
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>Used by CNC to retrieve recent logs from the agent’s local DB</li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>returns a json array with the recent logs
                    </li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>each item is an array of the following structure:
                    </li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>[id, agent_d, malware_id, status, time, action_log, csv_row_id]</li>
                </ul>
            </div>
        </div>
                <div class="card  bg-dark text-white m-3">
            <div class="card-body">
                <b>@app.route(‘/run_exe’): run_exe()
                </b>
                <ul class="fa-ul">
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>Runs an exe file and returns a json with results</li>
                    <li class="m-2"><i class="fa-li fa fa-angle-right"></i>Used by CNC to run a standalone exe file

                    </li>
                   
                </ul>
            </div>
        </div>
    </section>
</asp:Content>

